{"version":3,"file":"select.directive.js","sourceRoot":"","sources":["select.directive.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAU,SAAS,EAAE,MAAM,eAAe,CAAC;AAMxF,MAAM;;;;;;IAKJ,YAAyC,UAAuC,QAAmB,EAAU,UAAsB;QAA1F,aAAQ,GAAR,QAAQ;QAA+B,aAAQ,GAAR,QAAQ,CAAW;QAAU,eAAU,GAAV,UAAU,CAAY;KAClI;;;;IAED,QAAQ;;QAEN,uBAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAEnE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,uBAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACnD,uBAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAC5D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YAC5C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,EAAE,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAElH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;KACxE;;;YA3BF,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;aACvB;;;;4CAMc,MAAM,SAAC,SAAS;YAXwB,SAAS;YAA5C,UAAU;;;sBAQ3B,KAAK","sourcesContent":["import { Directive, ElementRef, Inject, Input, OnInit, Renderer2 } from '@angular/core';\nimport { FormUtilitiesOptions } from '../../form-utilities.module';\n\n@Directive({\n  selector: '[bdSelect]'\n})\nexport class SelectDirective implements OnInit {\n\n  @Input()\n  label: string;\n\n  constructor(@Inject('options') protected _options:FormUtilitiesOptions, private renderer: Renderer2, private elementRef: ElementRef) {\n  }\n\n  ngOnInit(): void {\n    // Create a div with form-group\n    const formGroupDiv = this.renderer.createElement('div');\n    this.renderer.addClass(formGroupDiv, this._options.classFormGroup);\n\n    if (this.label) {\n      const label = this.renderer.createElement('label');\n      const labelText = this.renderer.createText(this.label);\n      this.renderer.addClass(label, this._options.classFormLabel);\n      this.renderer.appendChild(label, labelText);\n      this.renderer.appendChild(formGroupDiv, label);\n    }\n\n    this.renderer.insertBefore(this.elementRef.nativeElement.parentNode, formGroupDiv, this.elementRef.nativeElement);\n\n    this.renderer.appendChild(formGroupDiv, this.elementRef.nativeElement);\n  }\n}\n"]}