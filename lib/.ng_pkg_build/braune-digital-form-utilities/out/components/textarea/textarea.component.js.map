{"version":3,"file":"textarea.component.js","sourceRoot":"","sources":["textarea.component.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,EAAwB,oBAAoB,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAC5G,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAChF,OAAO,EAAE,gBAAgB,EAAE,MAAM,mCAAmC,CAAC;AAiDrE,MAAM,wBAAyB,SAAQ,kBAAkB;;;;;IAsBvD,YAAyC,UAAsC,gBAAkC;QAC/G,KAAK,CAAC,QAAQ,CAAC,CAAC;QADuB,aAAQ,GAAR,QAAQ;QAA8B,qBAAgB,GAAhB,gBAAgB,CAAkB;2BARnG,EAAE;6BAGA,KAAK;KAOpB;;;YAtEF,SAAS,SAAC;gBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;gBACnB,SAAS,EAAE,CAAC;wBACV,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC;wBAChD,KAAK,EAAE,IAAI;qBACZ,CAAC;gBACF,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAoCX;aACA;;;;4CAuBc,MAAM,SAAC,SAAS;YAvEtB,gBAAgB;;;sBAkDtB,SAAS,SAAC,oBAAoB;sBAG9B,KAAK;qBAGL,KAAK;2BAGL,KAAK;4BAGL,KAAK;8BAGL,KAAK;4BAGL,KAAK","sourcesContent":["import { FormInputComponent } from '../form-input.component';\nimport { ControlValueAccessor, DefaultValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Component, forwardRef, Inject, Input, ViewChild } from '@angular/core';\nimport { FormErrorService } from '../../services/form-error.service';\nimport { FormUtilitiesOptions } from '../../form-utilities.module';\n\n@Component({\n  moduleId: module.id,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TextareaComponent),\n    multi: true\n  }],\n  selector: 'bd-textarea',\n  template: `<div class=\"{{ options.classFormGroup }}\" [ngClass]=\"{'has-errors': errors.length}\">\n\n  <div class=\"{{ options.classFromInput }}\">\n\n    <div class=\"{{ options.classFromLegend }}\">\n\n      <bd-form-label [label]=\"label\" [inputId]=\"uniqueId\"></bd-form-label>\n      <bd-form-required [required]=\"requiredMarker\" *ngIf=\"requiredMarker\"></bd-form-required>\n      <bd-form-tips [tips]=\"tips\" *ngIf=\"tips\"></bd-form-tips>\n      <bd-form-counter [maxLength]=\"maxLength\" [form]=\"formControl\" *ngIf=\"maxLength && options.counterBefore\"></bd-form-counter>\n\n    </div>\n\n    <div class=\"{{ inputGroupClass }}\">\n\n      <bd-form-addon [text]=\"prepend\" position=\"prepend\" *ngIf=\"prepend\"></bd-form-addon>\n\n      <textarea [disabled]=\"disabled\"\n                class=\"{{ options.classFormControl }} {{ inputClass }}\"\n                [placeholder]=\"placeholder\"\n                [attr.id]=\"uniqueId\"\n                [attr.maxlength]=\"maxLength\"\n                [attr.aria-label]=\"placeholder\"\n                autosize\n                ngDefaultControl>\n      </textarea>\n\n      <bd-form-addon [text]=\"append\" position=\"append\" *ngIf=\"append\"></bd-form-addon>\n\n    </div>\n  </div>\n\n  <bd-form-errors [errors]=\"errors\" *ngIf=\"errors\"></bd-form-errors>\n  <bd-form-counter [maxLength]=\"maxLength\" [form]=\"formControl\" *ngIf=\"maxLength && !options.counterBefore\"></bd-form-counter>\n  <bd-form-help [label]=\"help\" *ngIf=\"help\"></bd-form-help>\n</div>\n`\n})\nexport class TextareaComponent extends FormInputComponent implements ControlValueAccessor {\n  @ViewChild(DefaultValueAccessor)\n  input: DefaultValueAccessor;\n\n  @Input()\n  label: string;\n\n  @Input()\n  help: string;\n\n  @Input()\n  inputClass: string;\n\n  @Input()\n  placeholder = '';\n\n  @Input()\n  disableErrors = false;\n\n  @Input()\n  formControl: FormControl;\n\n  constructor(@Inject('options') protected _options:FormUtilitiesOptions, public formErrorService: FormErrorService) {\n    super(_options);\n  }\n}\n"]}