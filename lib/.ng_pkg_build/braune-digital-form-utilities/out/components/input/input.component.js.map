{"version":3,"file":"input.component.js","sourceRoot":"","sources":["input.component.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,EAAwB,oBAAoB,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAC5G,OAAO,EAAC,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAC,MAAM,eAAe,CAAC;AACpG,OAAO,EAAE,gBAAgB,EAAE,MAAM,mCAAmC,CAAC;AAsDrE,MAAM,qBAAsB,SAAQ,kBAAkB;;;;;IAwCpD,YAAyC,UAAsC,gBAAkC;QAC/G,KAAK,CAAC,QAAQ,CAAC,CAAC;QADuB,aAAQ,GAAR,QAAQ;QAA8B,qBAAgB,GAAhB,gBAAgB,CAAkB;2BA7BnG,EAAE;oBAGT,MAAM;oBAGN,EAAE;6BAGO,KAAK;+BAMmB,IAAI,YAAY,EAAE;6BAGpB,IAAI,YAAY,EAAE;4BAGnB,IAAI,YAAY,EAAE;uBAGvB,IAAI,YAAY,EAAE;0BAGf,IAAI,YAAY,EAAE;KAIpD;;;;;IAED,qBAAqB,CAAC,KAAa;QACjC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAClC;;;;;IAED,mBAAmB,CAAC,KAAa;QAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;;;;;IAED,kBAAkB,CAAC,KAAa;QAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;;;;;IAED,aAAa,CAAC,KAAa;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1B;;;;;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7B;;;YAnHF,SAAS,SAAC;gBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;gBACnB,SAAS,EAAE,CAAC;wBACV,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC;wBAC7C,KAAK,EAAE,IAAI;qBACZ,CAAC;gBACF,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyCX;aACA;;;;4CAyCc,MAAM,SAAC,SAAS;YA9FtB,gBAAgB;;;sBAuDtB,SAAS,SAAC,oBAAoB;sBAG9B,KAAK;2BAGL,KAAK;4BAGL,KAAK;qBAGL,KAAK;qBAGL,KAAK;8BAGL,KAAK;4BAGL,KAAK;gCAGL,MAAM;8BAGN,MAAM;6BAGN,MAAM;wBAGN,MAAM;2BAGN,MAAM","sourcesContent":["import { FormInputComponent } from '../form-input.component';\nimport { ControlValueAccessor, DefaultValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {Component, EventEmitter, forwardRef, Inject, Input, Output, ViewChild} from '@angular/core';\nimport { FormErrorService } from '../../services/form-error.service';\nimport { FormUtilitiesOptions } from '../../form-utilities.module';\n\n@Component({\n  moduleId: module.id,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputComponent),\n    multi: true\n  }],\n  selector: 'bd-input',\n  template: `<div class=\"{{ options.classFormGroup }}\" [ngClass]=\"{'focus': focus, 'has-errors': errors.length}\">\n\n  <div class=\"{{ options.classFromInput }}\">\n\n    <div class=\"{{ options.classFromLegend }}\">\n\n      <bd-form-label [label]=\"label\" [inputId]=\"uniqueId\"></bd-form-label>\n      <bd-form-required [required]=\"requiredMarker\" *ngIf=\"requiredMarker\"></bd-form-required>\n      <bd-form-tips [tips]=\"tips\" *ngIf=\"tips\"></bd-form-tips>\n      <bd-form-counter [maxLength]=\"maxLength\" [form]=\"formControl\" *ngIf=\"maxLength && options.counterBefore\"></bd-form-counter>\n\n    </div>\n\n    <div class=\"{{ inputGroupClass }}\">\n\n      <bd-form-addon [text]=\"prepend\" position=\"prepend\" *ngIf=\"prepend\"></bd-form-addon>\n\n      <input [disabled]=\"disabled\"\n             [type]=\"type\"\n             [step]=\"step\"\n             class=\"{{ options.classFormControl }} {{ inputClass }}\"\n             [placeholder]=\"placeholder\"\n             [attr.id]=\"uniqueId\"\n             [attr.maxlength]=\"maxLength\"\n             [attr.aria-label]=\"placeholder\"\n             (focusout)=\"handleOnFocusOut($event.target.value)\"\n             (focus)=\"handleOnFocus($event.target.value)\"\n             (change)=\"handleOnInputChange($event.target.value)\"\n             (keypress)=\"handleOnInputKeypress($event.target.value)\"\n             (keyup)=\"handleOnInputKeyup($event.target.value)\"\n             ngDefaultControl>\n\n      <bd-form-addon [text]=\"append\" position=\"append\" *ngIf=\"append\"></bd-form-addon>\n\n    </div>\n  </div>\n\n  <bd-form-errors [errors]=\"errors\"></bd-form-errors>\n  <bd-form-counter [maxLength]=\"maxLength\" [form]=\"formControl\" *ngIf=\"maxLength && !options.counterBefore\"></bd-form-counter>\n  <bd-form-help [label]=\"help\" *ngIf=\"help\"></bd-form-help>\n</div>\n`\n})\nexport class InputComponent extends FormInputComponent implements ControlValueAccessor {\n  @ViewChild(DefaultValueAccessor)\n  input: DefaultValueAccessor;\n\n  @Input()\n  label: string;\n\n  @Input()\n  inputClass: string;\n\n  @Input()\n  placeholder = '';\n\n  @Input()\n  type = 'text';\n\n  @Input()\n  step = '';\n\n  @Input()\n  disableErrors = false;\n\n  @Input()\n  formControl: FormControl;\n\n  @Output()\n  onInputKeypress: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  onInputChange: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  onInputKeyup: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  onFocus: EventEmitter<string> = new EventEmitter();\n\n  @Output()\n  onFocusOut: EventEmitter<string> = new EventEmitter();\n\n  constructor(@Inject('options') protected _options:FormUtilitiesOptions, public formErrorService: FormErrorService) {\n    super(_options);\n  }\n\n  handleOnInputKeypress(value: string): void {\n    this.onInputKeypress.emit(value);\n  }\n\n  handleOnInputChange(value: string): void {\n    this.onInputChange.emit(value);\n  }\n\n  handleOnInputKeyup(value: string): void {\n    this.onInputKeyup.emit(value);\n  }\n\n  handleOnFocus(value: string): void {\n    this.focus = true;\n    this.onFocus.emit(value);\n  }\n\n  handleOnFocusOut(value: string): void {\n    this.focus = false;\n    this.onFocusOut.emit(value);\n  }\n}\n"]}