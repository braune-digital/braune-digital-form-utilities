{"version":3,"file":"ckeditor.component.js","sourceRoot":"","sources":["ckeditor.component.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,EAAwB,oBAAoB,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAC5G,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAChF,OAAO,EAAE,gBAAgB,EAAE,MAAM,mCAAmC,CAAC;AACrE,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAC;AA8CjD,MAAM,wBAAyB,SAAQ,kBAAkB;;;;;IAmCvD,YAAyC,UAAsC,gBAAkC;QAC/G,KAAK,CAAC,QAAQ,CAAC,CAAC;QADuB,aAAQ,GAAR,QAAQ;QAA8B,qBAAgB,GAAhB,gBAAgB,CAAkB;8BA1B5F;YACnB,MAAM,EAAE,YAAY;YACpB,SAAS,EAAE;gBACT;oBACE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAC,QAAQ,EAAC,WAAW,EAAC,eAAe,EAAC,GAAG,EAAC,cAAc,EAAC,cAAc,EAAC,GAAG,EAAC,aAAa,EAAC,eAAe,EAAC,cAAc,EAAC,GAAG,EAAC,MAAM,CAAE;iBACnM;aACF;SACF;2BAQa,EAAE;6BAGA,KAAK;KAUpB;;;;;IAED,cAAc,CAAC,MAAU;QACvB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACvB;;;;;IAED,UAAU,CAAC,KAAU;QACnB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;KAC3B;;;;;IAED,gBAAgB,CAAC,EAAoB;QACnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;;;;;IAED,iBAAiB,CAAC,EAAc;QAC9B,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;KAClC;;;;;IAED,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;KACzC;;;YAnGF,SAAS,SAAC;gBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;gBACnB,SAAS,EAAE,CAAC;wBACV,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC;wBAChD,KAAK,EAAE,IAAI;qBACZ,CAAC;gBACF,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAgCX;aACA;;;;4CAoCc,MAAM,SAAC,SAAS;YAlFtB,gBAAgB;;;sBAiDtB,SAAS,SAAC,oBAAoB;uBAG9B,SAAS,SAAC,iBAAiB;+BAG3B,KAAK;2BAUL,KAAK;sBAGL,KAAK;4BAEL,KAAK;8BAGL,KAAK;4BAGL,KAAK","sourcesContent":["import { FormInputComponent } from '../form-input.component';\nimport { ControlValueAccessor, DefaultValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Component, forwardRef, Inject, Input, ViewChild } from '@angular/core';\nimport { FormErrorService } from '../../services/form-error.service';\nimport { CKEditorComponent } from 'ng2-ckeditor';\nimport { FormUtilitiesOptions } from '../../form-utilities.module';\n\n\n@Component({\n  moduleId: module.id,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CkeditorComponent),\n    multi: true\n  }],\n  selector: 'bd-ckeditor',\n  template: `<div class=\"{{ options.classFormGroup }}\" [ngClass]=\"{'has-errors': errors.length}\">\n\n  <div class=\"{{ options.classFromInput }}\">\n\n    <div class=\"{{ options.classFromLegend }}\">\n\n      <bd-form-label [label]=\"label\" [inputId]=\"uniqueId\"></bd-form-label>\n      <bd-form-required [required]=\"requiredMarker\" *ngIf=\"requiredMarker\"></bd-form-required>\n      <bd-form-tips [tips]=\"tips\" *ngIf=\"tips\"></bd-form-tips>\n      <bd-form-counter [maxLength]=\"maxLength\" [form]=\"formControl\" *ngIf=\"maxLength && options.counterBefore\"></bd-form-counter>\n\n    </div>\n\n    <div class=\"{{ inputGroupClass }}\">\n\n      <ckeditor\n        class=\"{{ inputClass }}\"\n        [attr.id]=\"uniqueId\"\n        [attr.maxlength]=\"maxLength\"\n        [attr.aria-label]=\"placeholder\"\n        [config]=\"ckeditorConfig\"\n        (change)=\"onEditorChange($event)\"\n        ngDefaultControl>\n      </ckeditor>\n\n    </div>\n  </div>\n\n  <bd-form-errors [errors]=\"errors\" *ngIf=\"errors\"></bd-form-errors>\n  <bd-form-counter [maxLength]=\"maxLength\" [form]=\"formControl\" *ngIf=\"maxLength && !options.counterBefore\"></bd-form-counter>\n  <bd-form-help [label]=\"help\" *ngIf=\"help\"></bd-form-help>\n</div>\n`\n})\nexport class CkeditorComponent extends FormInputComponent implements ControlValueAccessor {\n\n  @ViewChild(DefaultValueAccessor)\n  input: DefaultValueAccessor;\n\n  @ViewChild(CKEditorComponent)\n  editor: CKEditorComponent;\n\n  @Input()\n  ckeditorConfig: {} = {\n    'skin': 'moono-lisa',\n    'toolbar': [\n      {\n        name: 'bd-form', items: ['Format', '-', 'Source', '-', 'Bold','Italic','Underline','StrikeThrough','-','NumberedList','BulletedList','-','JustifyLeft','JustifyCenter','JustifyRight','-','Link' ]\n      }\n    ]\n  };\n\n  @Input()\n  inputClass: string;\n\n  @Input()\n  label: string;\n  @Input()\n  placeholder = '';\n\n  @Input()\n  disableErrors = false;\n\n  @Input()\n  formControl: FormControl;\n\n  onChange: (_: any) => void;\n  onTouched: () => void;\n\n  constructor(@Inject('options') protected _options:FormUtilitiesOptions, public formErrorService: FormErrorService) {\n    super(_options);\n  }\n\n  onEditorChange(_value:any): void {\n    this.onChange(_value);\n  }\n\n  writeValue(value: any): void {\n    this.editor.value = value;\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.input.registerOnTouched(fn);\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.input.setDisabledState(isDisabled);\n  }\n\n}\n"]}